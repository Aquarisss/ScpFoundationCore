apply plugin: 'com.android.library'

apply plugin: 'realm-android'
apply plugin: 'com.jakewharton.butterknife'

//apply plugin: 'com.novoda.bintray-release'
//apply plugin: 'com.github.dcendents.android-maven'

//here is script to generate version code from version name
//which is set in gradle.properties as value of version var
//which must be in format major, minor, patch, where patch goes from 0 to 99
apply from: '../versioning.gradle'

apply from: '../marketSkusCreator.gradle'
apply from: '../apiKeysCreator.gradle'

ext {
    bintrayRepo = 'scp-core'
    bintrayName = 'scp-core'

    publishedGroupId = 'ru.kuchanov.scp'
    libraryName = 'core'
    artifact = 'core'

    libraryDescription = 'ScpFoundation android app core'

    siteUrl = 'https://github.com/mohaxspb/ScpFoundationCore'
    gitUrl = 'https://github.com/mohaxspb/ScpFoundationCore.git'

    libraryVersion = version

    developerId = 'mohaxspb'
    developerName = 'Yuri K'
    developerEmail = 'mohax.spb@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]

    PUBLISH_GROUP_ID = 'ru.kuchanov.scp'
    PUBLISH_ARTIFACT_ID = 'core'
    PUBLISH_VERSION = version
}

//publish {
//    userOrg = 'mohaxspb'
//    groupId = 'ru.kuchanov.scp'
//    artifactId = 'core'
//    publishVersion = project.version
//    desc = 'Oh hi, this is a nice description for a project, right?'
//    website = 'https://github.com/novoda/bintray-release'
//}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    compileOptions.encoding = 'utf-8'

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/LICENSE'
    }

    flavorDimensions "mode"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 26
        versionCode buildVersionCodeFor3Numbers()
        versionName version
        // Enabling multidex support.
        multiDexEnabled true

        manifestPlaceholders = [debuggable: true]
        buildConfigField "boolean", "TIMBER_ENABLE", "true"

        buildConfigField "String", "VK_API_VERSION", '"5.62"'

        buildConfigField('int', 'TIMEOUT_SECONDS_CONNECT', '60')
        buildConfigField('int', 'TIMEOUT_SECONDS_READ', '60')
        buildConfigField('int', 'TIMEOUT_SECONDS_WRITE', '60')

        buildConfigField('String', 'SCP_API_URL', '"https://scpfoundation.net/_api/wikidot_tags_search/"')

        //play market refuses not hardcoded strings as intent filter
        resValue('string', 'receiver_action_timer', '"ru.dante.scpfoundation.receivers.ReceiverTimer"')
        resValue('string', 'receiver_action_boot', '"android.intent.action.BOOT_COMPLETED"')
//        manifestPlaceholders = [receiver_action_timer: "ru.dante.scpfoundation.receivers.ReceiverTimer"]
//        manifestPlaceholders = [receiver_action_boot: "android.intent.action.BOOT_COMPLETED"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    publishNonDefault true

    productFlavors {
        prod {
            manifestPlaceholders = [myDebuggable: false]
            buildConfigField "boolean", "TIMBER_ENABLE", "false"

            dimension "mode"
        }

        dev {
            manifestPlaceholders = [myDebuggable: true]

            dimension "mode"
        }

        libraryVariants.all { variant ->
            println("variantCore: " + variant.getName())

            fillArrays(variant, true)
            fillApiArrays(variant, true)
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'MissingTranslation'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    String supportLibraryVersion = '26.1.0'
    String googleLibraryVersion = '11.4.2'

    api fileTree(dir: 'libs', include: ['*.jar'])
    //support libs
    api "com.android.support:appcompat-v7:$supportLibraryVersion"
    api "com.android.support:recyclerview-v7:$supportLibraryVersion"
    api "com.android.support:design:$supportLibraryVersion"
    api "com.android.support:cardview-v7:$supportLibraryVersion"
    //need this as gradle place warning on libs versions
    api "com.android.support:support-annotations:$supportLibraryVersion"
    api "com.android.support:customtabs:$supportLibraryVersion"
    api "com.android.support:animated-vector-drawable:$supportLibraryVersion"
    api "com.android.support:support-v13:$supportLibraryVersion"
    api "com.android.support:support-v4:$supportLibraryVersion"
    api "com.android.support:support-compat:$supportLibraryVersion"
    //multidex to support more than 65K methods
    api 'com.android.support:multidex:1.0.2'
    //rx
    api 'io.reactivex:rxandroid:1.2.1'
    api 'io.reactivex:rxjava:1.3.2'
    // Retrofit
    api('com.squareup.retrofit2:retrofit:2.3.0') { exclude module: 'okhttp' }
    api 'com.squareup.okhttp3:okhttp:3.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    //jsoup
    api 'org.jsoup:jsoup:1.10.3'
    //logs
    api 'com.jakewharton.timber:timber:4.5.1'
    //dagger2
    String daggerVersion = '2.11'
    api "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    //butterKnife
    String butterKnifeVersion = '8.8.1'
    api "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    //image
    api 'com.github.bumptech.glide:glide:3.8.0'
    api 'com.github.chrisbanes:PhotoView:2.1.3'
    api 'de.hdodenhof:circleimageview:2.1.0'
    //mvp
    //WARNING!!!
    //Do not update to 3+ version, as there are problems with caching presenters that are not singleton
    //WARNING!!!
    api 'com.hannesdorfmann.mosby:mvp:2.0.1'
//    compile 'com.hannesdorfmann.mosby3:mvp-nullobject-presenter:3.0.4'
    //vk
    api 'com.vk:androidsdk:1.6.9'
    //facebook
    api 'com.facebook.android:facebook-android-sdk:4.27.0'
    //dialogs
//    api 'com.afollestad.material-dialogs:core:0.9.4.5'
    //fonts
    api 'uk.co.chrisjenx:calligraphy:2.3.0'
    //firebase
    api "com.google.firebase:firebase-config:$googleLibraryVersion"
    api "com.google.firebase:firebase-crash:$googleLibraryVersion"
    api "com.google.firebase:firebase-core:$googleLibraryVersion"
    api "com.google.firebase:firebase-analytics:$googleLibraryVersion"
    api "com.google.firebase:firebase-invites:$googleLibraryVersion"
    api "com.google.firebase:firebase-ads:$googleLibraryVersion"
    api "com.google.firebase:firebase-database:$googleLibraryVersion"
    api "com.google.firebase:firebase-auth:$googleLibraryVersion"
    api "com.google.firebase:firebase-messaging:$googleLibraryVersion"
    //google login
    api "com.google.android.gms:play-services-auth:$googleLibraryVersion"
    //appodeal
    api "com.google.android.gms:play-services-ads:$googleLibraryVersion"
    api "com.google.android.gms:play-services-location:$googleLibraryVersion"
    api 'com.squareup.picasso:picasso:2.5.2' //for Inmobi
    api 'com.adcolony:sdk:3.2.1'
    compile 'com.google.android.exoplayer:exoplayer:r2.5.4'
    //end of appodeal
    // AppMetrica
    //we add it here and delete jar from appodeal
    api 'com.yandex.android:mobmetricalib:2.77'
    //recyclerView fast scroller
    api 'xyz.danoz:recyclerviewfastscroller:0.1.3'
    //circular progress
    api 'com.github.jakob-grabner:Circle-Progress-View:v1.3'
    //tags layout
    api 'com.google.android:flexbox:0.3.0-alpha3'
    //range seekbar
    api 'com.crystal:crystalrangeseekbar:1.1.3'
    //leakcanary
    String leakcanaryVersion = '1.5.4'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"
    //time operations
    api 'joda-time:joda-time:2.9.9'

    //sub project modules
    api('ru.kuchanov.scp:downloads:1.0.24@aar') { transitive = true }
    api('ru.kuchanov.utils:rate:1.0.5@aar') { transitive = true }
}

//add aar dependencies same as in appodeal sample project
//https://github.com/appodeal/appodeal-android-demo/blob/master/app/build.gradle
//fileTree(dir: 'libs-aar', include: '*.aar').each { File file ->
//    dependencies.add("compile", [name: file.name.replaceFirst(~/\.[^\.]+$/, ''), ext: 'aar'])
//}

//add it only in project build.gradle, not in lib
//apply plugin: 'com.google.gms.google-services'

//Place it at the end of the file for publishing to bintray
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//use own implementation as we fix here issue with java doc generating
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
apply from: '../bintrayv1.gradle'
//TODO try to use this to transite dependencies - https://github.com/bintray/gradle-bintray-plugin

//apply from: 'https://raw.githubusercontent.com/blundell/release-android-library/master/android-release-aar.gradle'
apply plugin: 'com.android.library'
//kotlin
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//realm
apply plugin: 'realm-android'
//butterknife
apply plugin: 'com.jakewharton.butterknife'

//here is script to generate version code from version name
//which is set in gradle.properties as value of version var
//which must be in format major, minor, patch, where patch goes from 0 to 99
apply from: '../versioning.gradle'

apply from: '../marketSkusCreator.gradle'
apply from: '../apiKeysCreator.gradle'

android {
    compileSdkVersion 28

    compileOptions.encoding = 'utf-8'

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/LICENSE'
    }

    flavorDimensions "mode", "chanel"

    def buildDateTime = project.hasProperty('devBuild') ? 100 : buildVersionCodeFor3Numbers()

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode buildDateTime
        versionName version
        multiDexEnabled true

        manifestPlaceholders = [debuggable: true]
        buildConfigField "boolean", "TIMBER_ENABLE", "true"

        buildConfigField "String", "VK_API_VERSION", '"5.62"'

        buildConfigField('int', 'TIMEOUT_SECONDS_CONNECT', '60')
        buildConfigField('int', 'TIMEOUT_SECONDS_READ', '60')
        buildConfigField('int', 'TIMEOUT_SECONDS_WRITE', '60')

        buildConfigField('String', 'SCP_API_URL', '"https://wikidot.scpdb.org/"')

        //fixme delete it
        buildConfigField('String', 'EN_SCP_API_URL', '"http://home.helenbot.com/"')

        //play market refuses not hardcoded strings as intent filter
        resValue('string', 'receiver_action_timer', '"ru.dante.scpfoundation.receivers.ReceiverTimer"')
        resValue('string', 'receiver_action_boot', '"android.intent.action.BOOT_COMPLETED"')
//        manifestPlaceholders = [receiver_action_timer: "ru.dante.scpfoundation.receivers.ReceiverTimer"]
//        manifestPlaceholders = [receiver_action_boot: "android.intent.action.BOOT_COMPLETED"]

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        prod {
            manifestPlaceholders = [myDebuggable: false]
            buildConfigField "boolean", "TIMBER_ENABLE", "false"

            dimension "mode"
        }

        dev {
            dimension "mode"

            manifestPlaceholders = [myDebuggable: true]

            //PNG optimizations are enabled by default, but are not needed for development builds.
            //Disable them to speed up your builds.
            aaptOptions.cruncherEnabled = false
            //only package russian translations, and xxhdpi resources
            resConfigs("ru", "xxhdpi")
        }

        gp {
            dimension "chanel"
            //todo

        }

        amazon {
            dimension "chanel"
            //todo

        }

        libraryVariants.all { variant ->
            println("variantCore: " + variant.getName())

            fillArrays(variant, true)
            fillApiArrays(variant, true)
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'MissingTranslation'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dependencies {
        String supportLibraryVersion = '28.0.0'

        api fileTree(dir: 'libs', include: ['*.jar'])
        //kotlin
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        //support libs
        api "com.android.support:appcompat-v7:$supportLibraryVersion"
        api "com.android.support:recyclerview-v7:$supportLibraryVersion"
        api "com.android.support:design:$supportLibraryVersion"
        api "com.android.support:cardview-v7:$supportLibraryVersion"
        api 'com.android.support.constraint:constraint-layout:1.1.3'
        //multidex to support more than 65K methods
        api 'com.android.support:multidex:1.0.3'
        //adapter delegates
        api 'com.hannesdorfmann:adapterdelegates3:3.1.0'
        //rx
        api 'io.reactivex:rxandroid:1.2.1'
        api 'io.reactivex:rxjava:1.3.8'
        api 'io.reactivex:rxkotlin:1.0.0'
        //Retrofit
        api('com.squareup.retrofit2:retrofit:2.4.0') { exclude module: 'okhttp' }
        api 'com.squareup.okhttp3:okhttp:3.12.0'
        api 'com.squareup.okhttp3:logging-interceptor:3.12.0'
        api 'com.squareup.retrofit2:converter-gson:2.4.0'
        api 'com.squareup.retrofit2:adapter-rxjava:2.4.0'
        //jsoup
        api 'org.jsoup:jsoup:1.11.3'
        //logs
        api 'com.jakewharton.timber:timber:4.7.1'
        //dagger2
        String daggerVersion = '2.16'
        api "com.google.dagger:dagger:$daggerVersion"
        kapt "com.google.dagger:dagger-compiler:$daggerVersion"
        //butterKnife
        String butterKnifeVersion = '8.8.1'
        api "com.jakewharton:butterknife:$butterKnifeVersion", {
            exclude group: 'com.android.support'
        }
        kapt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
        //image
        api 'com.github.bumptech.glide:glide:4.9.0'
        api 'com.github.chrisbanes:PhotoView:2.1.4'
        api 'de.hdodenhof:circleimageview:2.2.0'
        //mvp
        //WARNING!!!
        //Do not update to 3+ version, as there are problems with caching presenters that are not singleton
        //WARNING!!!
//      api 'com.hannesdorfmann.mosby3:mvp-nullobject-presenter:3.1.0'
        api 'com.hannesdorfmann.mosby:mvp:2.0.1'
        //vk
        api 'com.vk:androidsdk:1.6.9'
        //facebook
        api 'com.facebook.android:facebook-core:4.38.1'
        api 'com.facebook.android:facebook-login:4.38.1'
        //firebase
        //WARNNING!!! There are bug with version update suggestions for firebase libs!
        //some versions are not yet released and failed to load.
        //check https://firebase.google.com/support/release-notes/android before update
        //to find latest versions! Also they can use `androidx` dependencies, which may cause conflicts!
        api 'com.google.firebase:firebase-core:16.0.8'
        api 'com.google.firebase:firebase-invites:16.1.1'
        api 'com.google.firebase:firebase-analytics:16.4.0'
        api 'com.google.firebase:firebase-database:16.1.0'
        api 'com.google.firebase:firebase-config:16.5.0'
        api 'com.google.firebase:firebase-ads:17.2.0'
        api 'com.google.firebase:firebase-auth:16.2.1'
        api 'com.google.firebase:firebase-messaging:17.6.0'
        //google login
        api 'com.google.android.gms:play-services-auth:16.0.1'

        //AppMetrica
        api 'com.yandex.android:mobmetricalib:3.2.2'
        //recyclerView fast scroller
        api 'xyz.danoz:recyclerviewfastscroller:0.1.3'
        //circular progress
        api 'com.github.jakob-grabner:Circle-Progress-View:v1.3'
        //tags layout
        api 'com.google.android:flexbox:1.0.0'
        //range seekbar
        api 'com.crystal:crystalrangeseekbar:1.1.3'
        //leakcanary
        String leakcanaryVersion = '1.6.1'
        //remove {-no-op} to use it
        debugImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"
        releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"
        testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion"
        //time operations
        api 'joda-time:joda-time:2.10.1'

        //new crash reporting
        api('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') { transitive = true }

        //sub project modules
        api('ru.kuchanov.utils:rate:1.2.1@aar') { transitive = true }
    }
}

//add it only in project build.gradle, not in lib
//apply plugin: 'com.google.gms.google-services'
